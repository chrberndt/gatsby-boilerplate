{"data":{"mdx":{"excerpt":"Auth If you want to restrict a page, you can use  needsAuth  frontmatter on the top of any markdown file. When you set to true, this pageâ€¦","timeToRead":1,"frontmatter":{"title":"Additional Features","needsAuth":null},"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Auth`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you want to restrict a page, you can use `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"needsAuth\"), ` frontmatter on the top of any markdown file. When you set to true, this page will be restricted for private users only.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `This authentication is provided by a `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://wedeploy.com/docs/auth/getting-started/\"\n    }\n  }, `WeDeploy Auth`), ` service that can be set on a `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \".env.production\"), ` or `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \".env.development\"), ` file. These files configuration will be explained in the next section.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Progressive Web App support`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Gatsby Boilerplate is a Progressive Web App,  if you aren't familiar with this term, check this `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://developers.google.com/web/progressive-web-apps/\"\n    }\n  }, `link`), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `During the development, this boilerplate was battle tested to turns it into a real PWA covering all  `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://developers.google.com/web/progressive-web-apps/checklist\"\n    }\n  }, `PWA checklist`), `.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `We could personalize our `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://developers.google.com/web/fundamentals/web-app-manifest/?hl=en\"\n    }\n  }, `progressive web app manifest file`), ` changing the values on `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"Gatsby-config.js\"), ` file. `), React.createElement(MDXTag, {\n    name: \"blockquote\",\n    components: components\n  }, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components,\n    parentName: \"blockquote\"\n  }, `PS: this files will be created only in build time when you perform a `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"gatsby build\"), `.`)), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Offline Support`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `We could personalize what type of files we can cache on `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"Gatsby-config.js\"), ` file on `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"gatsby-plugin-offline\"), ` options.\nDefault extensions are: `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"js,jpg,png,gif,html,css,svg\")), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `GZIP compression`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `If you want to disable the default zopfli plugin to compress our files just remove `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"gatsby-plugin-zopfli\"), ` on `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \"Gatsby-config.js\"), `.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Config and enviroment(.env) files`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `Gatsby uses a standard to define `, React.createElement(MDXTag, {\n    name: \"a\",\n    components: components,\n    parentName: \"p\",\n    props: {\n      \"href\": \"https://en.wikipedia.org/wiki/Environment_variable\"\n    }\n  }, `enviroment variables`), ` on his code.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `You can provide environment variables to your site to customize its behavior in different environments. Gatsby Boilerplate offers two possible files: `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \".env.production\"), ` which is used to set environment variables on production and `, React.createElement(\"code\", {\n    className: \"gatsby-code-text\"\n  }, \".env.development\"), ` that can be used to set environment variables on development.`));\n});"}}},"pageContext":{"slug":"docs/additional-features.html","previous":{"fields":{"redirect":null,"slug":"onboarding/index.html","mainPage":true},"code":{"scope":"/Users/diegonascimento/workspace/gatsby-boilerplate/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}},"next":{"fields":{"redirect":null,"slug":"docs/deployment.html","mainPage":false},"code":{"scope":"/Users/diegonascimento/workspace/gatsby-boilerplate/.cache/gatsby-mdx/remote-mdx-dir/3010b3badc54a9dfa4a4c80e419a41b2.js"}}}}